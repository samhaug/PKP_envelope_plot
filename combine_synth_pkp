#!/usr/bin/env python

import obspy
import seispy
import sys
import numpy as np
import h5py
from matplotlib import pyplot as plt
import glob
from scipy.interpolate import interp1d

# Combine synthetic envelopes for PKP precursors

dir_list = [sys.argv[1],
       sys.argv[2],
       sys.argv[3],
       sys.argv[4]]

env_name = sys.argv[5]

title = 'EED_{} : {}_{}_{}_{}'.format(
        dir_list[0].split('_')[-2],
        dir_list[0].split('_')[-1],
        dir_list[1].split('_')[-1],
        dir_list[2].split('_')[-1],
        dir_list[3].split('_')[-1])

h5title = 'EED_{}_{}_{}_{}_{}_{}'.format(
        dir_list[0].split('_')[-2],
        dir_list[0].split('_')[-1],
        dir_list[1].split('_')[-1],
        dir_list[2].split('_')[-1],
        dir_list[3].split('_')[-1],
        env_name)

if dir_list[-1] == 'none':
    dir_list = dir_list[0:-1]
pkp_list = []
for dir in dir_list:
    f = h5py.File(dir+'/'+env_name,'r')
    trace = f['env'][...]
    for ii in trace:
        ii += -1*np.mean(np.abs(ii[0:1000]))+1e-2
        ii *= 1.0/ii.max()
    pkp_list.append(trace)
    f.close()

pkp_full = np.sum(np.array(pkp_list),axis=0)
pkp_full = pkp_full/pkp_full.max(axis=1)[:,None]
#pkp_full = np.roll(pkp_full,-100,axis=1)
#fig,ax = plt.subplots()
#plt.imshow(np.log10(pkp_full),aspect='auto',interpolation='none',
#           cmap='Spectral_r',extent=[-35,10,140,130])
#ax.set_xlabel('Seconds after PKP')
#ax.set_ylabel('Range (degrees)')
#ax.set_title(title)

#plt.show()
f = h5py.File(h5title,'w')
f.create_dataset('env',data = pkp_full)
f.close()

