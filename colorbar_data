#!/usr/bin/env python

from matplotlib import pyplot as plt
from matplotlib import cm
import h5py
from sys import argv
import numpy as np
import matplotlib.gridspec as gridspec
from scipy.interpolate import interp2d
'''
Use this script to make the PKP envelope from an h5 data envelope file.
Include data from travel time curves.

combined_env.h5, 600_curve.csv, CMB_curve.csv

/home/samhaug/work1/PKP_precursor_data
'''

env_file = '/home/samhaug/work1/PKP_precursor_data/combined_env.h5'
curve_600 = '/home/samhaug/work1/PKP_precursor_data/600_curve.csv'
curve_CMB = '/home/samhaug/work1/PKP_precursor_data/CMB_curve.csv'

env_file = h5py.File(env_file)
curve_600 = np.genfromtxt(curve_600,delimiter=',')
z_600 = np.polyfit(curve_600[:,0],curve_600[:,1],3)
p_600 = np.poly1d(z_600)
curve_CMB = np.genfromtxt(curve_CMB,delimiter=',')
z_CMB = np.polyfit(curve_CMB[:,0],curve_CMB[:,1],3)
p_CMB = np.poly1d(z_CMB)
time_range = np.linspace(130,140,100)

env_full = env_file['env'][...]
range_full = env_file['range_count'][...]

fig = plt.figure(figsize=(4.0,4.0))
gs = gridspec.GridSpec(21, 5)

ax_env = fig.add_subplot(gs[0:17,0:4])
ax_hist = fig.add_subplot(gs[0:17,-1])
ax_cbar = fig.add_subplot(gs[-1,:-1])

ax_hist.tick_params(axis='both', which='major', labelsize=7)
ax_hist.xaxis.label.set_size(10)
ax_hist.set_xlabel('Number')
ax_hist.set_xticks(np.arange(0,3000,1000))

ax_env.set_xlabel('Time (sec)')
ax_env.set_ylabel('Epicentral distance (degrees)')
ax_env.tick_params(axis='both', which='major', labelsize=7)
ax_env.yaxis.label.set_size(10)
ax_env.xaxis.label.set_size(10)
ax_env.axvline(0,color='k',lw=1,ls='dashed')
#ax_env.text(1,135,'PKIKP Onset',size=10,color='w',rotation=90)


bins = np.arange(0,21,1)
ax_hist.barh(bins,range_full,1,color='gray',lw=1)
ax_hist.set_yticklabels([])
ax_hist.set_ylim((0,20))
log_env = np.flipud(np.nan_to_num(np.log10(env_full)))
log_env[log_env == 0] = -10
'Test area'
cmap = cm.get_cmap('gray_r',15)
tenv = log_env[:,2000:7000]
#tenv[tenv == 0] = 10e-5
h = np.linspace(0,tenv.shape[1],num=tenv.shape[1])
x = np.linspace(0,tenv.shape[0],num=tenv.shape[0])
fenv = interp2d(h,x,tenv,kind='linear')
hnew = np.linspace(0,tenv.shape[1],num=1000)
xnew = np.linspace(0,tenv.shape[0],num=1500)
tenvnew = fenv(hnew,xnew)
im = ax_env.imshow(tenvnew,
           interpolation='none',aspect='auto',
           cmap=cmap,clim=(-1.5,0.0),extent=[-15,5,130,140])
'Test area'
#im = ax_env.imshow(log_env[:,2000:7000],
#           interpolation='lanczos',aspect='auto',
#           cmap=cmap,clim=(-1.5,0),extent=[-15,5,130,140])

#contour plot
#cont_env = -1*log_env[:,2000:7000].copy()
cont_env = -1*tenvnew.copy()
cont_env[:,-100:] = 0.5
xx,yy = np.meshgrid(np.linspace(-15,5,num=cont_env.shape[1]),np.linspace(130,140,
                     num=cont_env.shape[0]))
ax_env.contour(xx,yy,np.flipud(cont_env),[1.0],
               hold='on',colors='red',lw=4,ls='solid')
ax_env.contour(xx,yy,np.flipud(cont_env),[1.4],
               hold='on',colors='red',lw=4,ls='solid')
ax_env.contour(xx,yy,np.flipud(cont_env),[0.6],
               hold='on',colors='red',lw=4,ls='solid')

ax_env.plot(p_600(time_range),time_range,c='k',lw=1,ls='dashed')
ax_env.plot(p_CMB(time_range),time_range,c='k',lw=1,ls='dashed')
ax_env.text(-14,139,'CMB',color='k',size=8)
ax_env.text(-6,131,'600 km',color='k',size=8)
#ax_env.scatter(curve_600[:,1],curve_600[:,0],s=20,c='w')

ax_env.set_xlim(-15,5)
ax_env.set_ylim(130,140)
plt.colorbar(im,cax=ax_cbar,orientation='horizontal',ticks=[-1.5,-1,-0.5,0])
ax_cbar.set_xlabel(r'$\log_{10}$ Amplitude')
ax_cbar.xaxis.label.set_size(10)
ax_cbar.tick_params(axis='both', which='major', labelsize=7)
#plt.tight_layout()

plt.show()
